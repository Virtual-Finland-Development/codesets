name: Build, Test, Deploy

on:
    workflow_dispatch:
        inputs:
            environment:
                description: Environment where to deploy the stack (dev, staging)
                type: environment
                required: true
    workflow_call:
        inputs:
            environment:
                description: Environment where to deploy the stack (dev, staging)
                type: string
                required: true
jobs:
    build-test-deploy:
        name: Build, test and deploy ${{ inputs.environment }}
        runs-on: ubuntu-latest
        permissions:
            id-token: write
            contents: write
        environment: ${{ inputs.environment }}
        steps:
            - uses: actions/checkout@v4
            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 18.x
            - name: Build
              run: |
                  npm install
                  npm run build
            - name: Test
              run: |
                  npm run test
            - name: Prepare deployment
              run: |
                  npm run build:infra
            - name: Configure AWS credentials
              uses: Virtual-Finland-Development/infrastructure/.github/actions/configure-aws-credentials@main
              with:
                  environment: ${{ inputs.environment }}
                  aws-region: ${{ secrets.AWS_REGION }}
                  pulumi-access-token: ${{ secrets.PULUMI_ACCESS_TOKEN }}
            - name: Deploy codesets
              uses: pulumi/actions@v4
              with:
                  work-dir: ./infra
                  command: up
                  stack-name: virtualfinland/${{ inputs.environment }}
                  upsert: true
              env:
                  PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
            - name: Tag the deployment
              uses: Virtual-Finland-Development/automatic-release-action@v1.0
              if: ${{ inputs.environment == 'staging' }}
              with:
                  environment: ${{ inputs.environment }}
                  githubToken: ${{ secrets.GITHUB_TOKEN }}
